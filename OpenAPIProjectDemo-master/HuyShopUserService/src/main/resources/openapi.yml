openapi: 3.0.1
info:
  title: HuyShop API
  version: 1.0.0

tags:
  - name: HuyShop
    description: HUY SHOP API SERVER

paths:
  /role/all:
    get:
      tags:
        - HuyShop
      summary: ALL ROLE
      operationId: getAllRole
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                items:
                  type: array
                  $ref: '#/components/schemas/Role'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Role not found
          content: {}
        405:
          description: Validation exception
          content: {}

  /role:
    post:
      tags:
        - HuyShop
      summary: CREATE NEW ROLE
      operationId: createRole
      requestBody:
        description: create new role
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'

        required: true
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Role not found
          content: {}
        405:
          description: Validation exception
          content: {}
  /role/{id}:
    put:
      tags:
        - HuyShop
      summary: UPDATE ROLE
      operationId: updateRole
      parameters:
        - name: id
          in: path
          description: ID of role to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: update role
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'

        required: true
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Role not found
          content: {}
        405:
          description: Validation exception
          content: {}

    get:
      tags:
        - HuyShop
      summary: FIND ROLE BY ID
      operationId: findByRoleId
      parameters:
        - name: id
          in: path
          description: ID of role to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Role not found
          content: {}
        405:
          description: Validation exception
          content: {}


    delete:
      tags:
        - HuyShop
      summary: DELETE ROLE EXITS
      operationId: deleteRole
      parameters:
        - name: id
          in: path
          description: ID of role to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Role not found
          content: {}

  /user/all:
    get:
      tags:
        - HuyShop
      summary: ALL USER
      operationId: getAllUser
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                items:
                  type: array
                  $ref: '#/components/schemas/User'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
        405:
          description: Validation exception
          content: {}

  /user:
    post:
      tags:
        - HuyShop
      summary: CREATE NEW USER
      operationId: createUser
      requestBody:
        description: create new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

        required: true
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
        405:
          description: Validation exception
          content: {}
  /user/{id}:
    put:
      tags:
        - HuyShop
      summary: UPDATE USER
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: update user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

        required: true
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
        405:
          description: Validation exception
          content: {}

    get:
      tags:
        - HuyShop
      summary: FIND USER BY ID
      operationId: findByUserId
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
        405:
          description: Validation exception
          content: {}


    delete:
      tags:
        - HuyShop
      summary: DELETE USER EXITS
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}

components:

  schemas:
    Role:
      description: This is Role Model
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        name:
          description: The name of Role
          type: string
        status:
          type: boolean
    User:
      description: This is User Model
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        name:
          description: The name of User
          type: string
        status:
          type: boolean
        email:
          type: string
        address:
          type: string
        userName:
          type: string
        passWord:
          type: string
        roleId:
          type: Role
        phone:
          type: string
        dob:
          type: string
          format: date


