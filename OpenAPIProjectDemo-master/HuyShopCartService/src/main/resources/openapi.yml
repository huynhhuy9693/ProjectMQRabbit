
openapi: 3.0.1
info:
  title: HuyShop API
  version: 1.0.0

tags:
  - name: HuyShop
    description: HUY SHOP API SERVER

paths:
  /cart/all:
    get:
      tags:
        - HuyShop
      summary: ALL CART
      operationId: getAllCart
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                items:
                  type: array
                  $ref: '#/components/schemas/Cart'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Category not found
          content: {}
        405:
          description: Validation exception
          content: {}
  /cart:
    post:
      tags:
        - HuyShop
      summary: CREATE NEW CART
      operationId: createCart
      requestBody:
        description: create new Cart
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
        required: true
      responses:
        200:
          description: Ok
        #          content:
        #            application/json:
        #              schema:
        #                $ref: '#/components/schemas/Cart'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Cart not found
          content: {}
        405:
          description: Validation exception
          content: {}
  /cart/{id}:
    put:
      tags:
        - HuyShop
      summary: UPDATE CART
      operationId: updateCart
      parameters:
        - name: id
          in: path
          description: ID of cart to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: update cart
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'

        required: true
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Role not found
          content: {}
        405:
          description: Validation exception
          content: {}

    get:
      tags:
        - HuyShop
      summary: FIND CART BY ID
      operationId: findByCartId
      parameters:
        - name: id
          in: path
          description: ID of cart to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: cart not found
          content: {}
        405:
          description: Validation exception
          content: {}


    delete:
      tags:
        - HuyShop
      summary: DELETE CART EXITS
      operationId: deleteCart
      parameters:
        - name: id
          in: path
          description: ID of cart return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Cart not found
          content: {}
  /cart-item:
    post:
      tags:
        - HuyShop
      summary: CREATE NEW CART ITEM
      operationId: createCartItem
      requestBody:
        description: create new cartItem
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'

        required: true
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
        405:
          description: Validation exception
          content: {}
  /cart-item/{id}:
    put:
      tags:
        - HuyShop
      summary: UPDATE CART ITEM
      operationId: updateCartItem
      parameters:
        - name: id
          in: path
          description: ID of cart-item to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: update cart-item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'

        required: true
      responses:
        200:
          description: Ok
          content:

            application/json:
              schema:
                $ref: '#/components/schemas/CartItem'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Cart item not found
          content: {}
        405:
          description: Validation exception
          content: {}


    delete:
      tags:
        - HuyShop
      summary: DELETE CART ITEM EXITS
      operationId: deleteCartItem
      parameters:
        - name: id
          in: path
          description: ID of cart-item to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: successful operation
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: cart-item not found
          content: {}

components:

  schemas:
    Cart:
      description: This is Cart Model
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        totalPrice:
          description: price
          type: string
        oderNumber:
          type: integer
          format: int64
        status:
          type: string
        dateOrder:
          type: string
          format: date
        email:
          type: string
        isSending:
          type: boolean
    CartItem:
      description: This is Cart-Item Model
      type: object
      properties:
        productId:
          type: integer
          format: int64
        name:
          description: The name of item
          type: string
        price:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64




